feat(interface): Add CLI query handler with Result type and composition root

Implement thin interface layer for query execution following SAM/Clean Architecture.
Interface remains stateless (parse/format only); all orchestration lives in
application/domain layers.

CHANGES:

Config Layer (Composition Root):
- bu_superagent/config/composition.py
  * Updated build_query_use_case(with_llm: bool = True) to optionally build LLM
  * If with_llm=True: includes LLM for generative RAG answers
  * If with_llm=False: uses extractive fallback (concatenated chunks)
  * Wires all dependencies: VectorStorePort, EmbeddingPort, LLMPort

Interface Layer - CLI Handlers:

1. Updated main.py (bu_superagent/interface/cli/main.py)
   * Enhanced CLI argument parser:
     - --question (required): Query text
     - --k (default=5): Number of chunks to retrieve
     - --no-llm: Use extractive fallback instead of LLM
     - --confidence (default=0.35): Confidence threshold for gating
     - --mmr: Enable Maximal Marginal Relevance for diversity
   * Proper Result type handling:
     - Success path: Format answer and citations with scores
     - Failure path: Display error name and message
     - Special handling for LowConfidenceError (shows scores)
   * Output formatting:
     - Answer section with header
     - Citations with numbered references and confidence scores
   * Preserves NotImplementedError for test compatibility (no --question)

2. NEW: query.py (bu_superagent/interface/cli/query.py)
   * Standalone query example demonstrating architecture
   * Hardcoded example query in German (BU domain)
   * Comprehensive docstrings explaining SAM principles
   * Shows Result type pattern (success/failure branches)
   * Demonstrates composition root usage
   * Special error formatting for LowConfidenceError
   * 64 lines with detailed comments

Tests:
- tests/interface/test_cli_parsing.py
  * Preserved original assertions in test_ingest_cli_parses_args
    - Validates collection from environment variable
    - Checks embedding_kind argument parsing
    - Verifies inject_section_titles flag
  * NEW: test_query_cli_success_path()
    - Mocks QueryKnowledgeBase with successful Result
    - Verifies answer text in output
    - Checks citation formatting with scores
  * NEW: test_query_cli_low_confidence_error()
    - Mocks QueryKnowledgeBase with LowConfidenceError
    - Verifies error name display
    - Checks top_score and threshold display
  * NEW: test_cli_main_with_question()
    - Tests main.py with --question argument
    - Verifies Result type handling in main CLI
    - Checks answer and citation output formatting

ARCHITECTURE COMPLIANCE (SAM):
✅ Interface is thin: only parse args and format output
✅ No business logic in interface layer
✅ All orchestration in application/domain (QueryKnowledgeBase use case)
✅ Composition root (config/composition.py) wires dependencies
✅ Result type provides explicit error handling (no exceptions in interface)
✅ Error translation happens in infrastructure (domain errors reach interface)
✅ CLI handler doesn't know about ports or adapters (only use case)

TESTING:
- 87 tests passing (5 in interface layer)
- 80% overall coverage
- CLI query handlers: 75-91% coverage
- 0 linting errors (ruff)
- 0 type errors (mypy)

USAGE EXAMPLES:

# Using main.py (interactive CLI)
python -m bu_superagent.interface.cli.main --question "Was ist BU?" --k 5 --mmr

# Using query.py (standalone example)
python -m bu_superagent.interface.cli.query

# Extractive fallback (no LLM)
python -m bu_superagent.interface.cli.main --question "Query" --no-llm

# Adjust confidence threshold
python -m bu_superagent.interface.cli.main --question "Query" --confidence 0.5

OUTPUT FORMAT:
================================================================================
ANSWER:
================================================================================
[Generated or concatenated text here]

================================================================================
CITATIONS:
================================================================================
[1] doc1.pdf (score=0.920)
[2] doc2.pdf (score=0.870)

ERROR FORMAT:
[ERROR] LowConfidenceError: Confidence below threshold
  → Top score: 0.250, Threshold: 0.350
  → Recommendation: Escalate to human review or refine query

ISSUE: Confidence-Gate architecture - interface layer implementation
